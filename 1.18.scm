(define (double n)
  (+ n n))
(define (halve n)
  (/ n 2))
(define (* a b)
  (define (mult-iter iter a result)
    (cond ((= iter 0) result)
	  ((even? iter) (mult-iter (halve iter) (double a) result))
	  (else (mult-iter (+ iter -1) a (+ result a)))))
  (cond ((< b 0) (- (mult-iter (- b) a 0)))
	(else (mult-iter b a 0))))
